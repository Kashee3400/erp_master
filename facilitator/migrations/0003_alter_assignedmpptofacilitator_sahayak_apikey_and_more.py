# Generated by Django 4.2 on 2025-01-16 07:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('facilitator', '0002_assignedmpptofacilitator_sahayak'),
    ]

    operations = [
        migrations.AlterField(
            model_name='assignedmpptofacilitator',
            name='sahayak',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mpps', to=settings.AUTH_USER_MODEL, verbose_name='Facilitator'),
        ),
        migrations.CreateModel(
            name='ApiKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(editable=False, help_text='Unique identifier for the API key.', max_length=40, unique=True, verbose_name='API Key')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when the API key was created.', verbose_name='Created At')),
                ('expires_at', models.DateTimeField(blank=True, help_text='The date and time when the API key expires.', null=True, verbose_name='Expiration Date')),
                ('valid_from', models.DateTimeField(blank=True, help_text='The date and time from which the API key becomes valid.', null=True, verbose_name='Valid From')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates whether the API key is active.', verbose_name='Is Active')),
                ('description', models.TextField(blank=True, help_text='A description of the purpose or use case for the API key.', null=True, verbose_name='Description')),
                ('usage_count', models.IntegerField(default=0, help_text='The number of times this API key has been used.', verbose_name='Usage Count')),
                ('max_usage_limit', models.IntegerField(blank=True, help_text='The maximum number of requests allowed for this API key.', null=True, verbose_name='Maximum Usage Limit')),
                ('usage_reset_time', models.DateTimeField(blank=True, help_text='The time at which the usage count will reset.', null=True, verbose_name='Usage Reset Time')),
                ('requests_per_day', models.IntegerField(default=1000, help_text='The maximum number of requests allowed per day for this API key.', verbose_name='Requests Per Day')),
                ('requests_per_hour', models.IntegerField(default=100, help_text='The maximum number of requests allowed per hour for this API key.', verbose_name='Requests Per Hour')),
                ('permissions', models.CharField(blank=True, help_text="The scope of actions allowed by this API key (e.g., 'read', 'write').", max_length=255, null=True, verbose_name='Permissions')),
                ('allowed_ips', models.TextField(blank=True, help_text='Comma-separated list of IP addresses allowed to use this API key.', null=True, verbose_name='Allowed IPs')),
                ('allowed_urls', models.TextField(blank=True, help_text='Comma-separated list of URLs or endpoints this API key can access.', null=True, verbose_name='Allowed URLs')),
                ('last_used_at', models.DateTimeField(blank=True, help_text='The date and time when this API key was last used.', null=True, verbose_name='Last Used At')),
                ('is_revoked', models.BooleanField(default=False, help_text='Indicates whether the API key has been revoked.', verbose_name='Is Revoked')),
                ('revoked_at', models.DateTimeField(blank=True, help_text='The date and time when this API key was revoked.', null=True, verbose_name='Revoked At')),
                ('failed_attempts', models.IntegerField(default=0, help_text='The number of failed authentication attempts using this API key.', verbose_name='Failed Attempts')),
                ('created_by', models.ForeignKey(help_text='The user who created this API key.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='api_keys_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('last_used_by', models.ForeignKey(blank=True, help_text='The last user who used this API key.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='api_keys_used', to=settings.AUTH_USER_MODEL, verbose_name='Last Used By')),
                ('revoked_by', models.ForeignKey(blank=True, help_text='The user who revoked this API key.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='revoked_api_keys', to=settings.AUTH_USER_MODEL, verbose_name='Revoked By')),
                ('user', models.ForeignKey(help_text='The user to whom this API key belongs.', on_delete=django.db.models.deletion.CASCADE, related_name='api_keys', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'API Key',
                'verbose_name_plural': 'API Keys',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='apikey',
            index=models.Index(fields=['user'], name='user_api_key_idx'),
        ),
        migrations.AddIndex(
            model_name='apikey',
            index=models.Index(fields=['is_active'], name='active_api_key_idx'),
        ),
        migrations.AddConstraint(
            model_name='apikey',
            constraint=models.UniqueConstraint(fields=('key',), name='unique_api_key_constraint'),
        ),
    ]
