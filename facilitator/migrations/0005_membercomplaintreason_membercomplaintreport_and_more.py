# Generated by Django 4.2 on 2025-03-06 09:41

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('facilitator', '0004_assignedmpptofacilitator_mpp_ex_code_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='MemberComplaintReason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(help_text='Reason for a member complaint.', max_length=150, unique=True, verbose_name='Reason')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when this reason was added.', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when this reason was last updated.', verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Member Complaint Reason',
                'verbose_name_plural': 'Member Complaint Reasons',
                'db_table': 'tbl_member_complaint',
                'ordering': ['reason'],
            },
        ),
        migrations.CreateModel(
            name='MemberComplaintReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_code', models.CharField(blank=True, help_text='Unique identifier for the VCG member.', max_length=20, null=True, verbose_name='Member Code')),
                ('member_ex_code', models.CharField(blank=True, help_text='External identifier for the VCG member.', max_length=20, null=True, verbose_name='Member External Code')),
                ('member_name', models.CharField(blank=True, help_text='Full name of the VCG member.', max_length=100, null=True, verbose_name='Member Name')),
            ],
            options={
                'verbose_name': 'Member Complaint Report',
                'verbose_name_plural': 'Member Complaint Reports',
                'db_table': 'tbl_member_complaint_report',
            },
        ),
        migrations.CreateModel(
            name='MonthAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mpp_name', models.CharField(default='', help_text='Name of the MPP associated with the meeting.', max_length=100, verbose_name='MPP Name')),
                ('mpp_ex_code', models.CharField(default='', help_text='External MPP Code for reference.', max_length=100, verbose_name='MPP EX Code')),
                ('mpp_code', models.CharField(help_text='Unique MPP code assigned.', max_length=100, verbose_name='MPP Code')),
                ('month', models.DateField(help_text='The month for which the assignment is created.', verbose_name='Month')),
                ('milk_collection', models.FloatField(default=0, help_text='Total milk collected per day in liters.', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Milk Collection (Liters/Day)')),
                ('no_of_members', models.PositiveIntegerField(default=0, verbose_name='No of Members')),
                ('no_of_pourers', models.PositiveIntegerField(default=0, verbose_name='No Of Pourers')),
                ('pourers_15_days', models.PositiveIntegerField(default=0, verbose_name='>=15 Days Pourers')),
                ('pourers_25_days', models.PositiveIntegerField(default=0, verbose_name='>=25 Days Pourers')),
                ('zero_days_pourers', models.PositiveIntegerField(default=0, verbose_name='Zero Days Pourers')),
                ('cattle_feed_sale', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Cattle Feed Sale (KG)')),
                ('mineral_mixture_sale', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Mineral Mixture Sale (KG)')),
                ('sahayak_recovery', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Sahayak Recovery (%)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Month Assignment',
                'verbose_name_plural': 'Month Assignments',
                'db_table': 'tbl_month_assignment',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VCGMeeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meeting_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the meeting.', unique=True)),
                ('mpp_name', models.CharField(default='', help_text='Name of the MPP associated with the meeting.', max_length=100, unique=True, verbose_name='MPP Name')),
                ('mpp_ex_code', models.CharField(default='', help_text='External MPP Code for reference.', max_length=100, unique=True, verbose_name='MPP EX Code')),
                ('mpp_code', models.CharField(default='', help_text='Unique MPP code assigned.', max_length=100, unique=True, verbose_name='MPP Code')),
                ('lat', models.FloatField(blank=True, help_text='Geographical latitude of the meeting location.', null=True, validators=[django.core.validators.MinValueValidator(-90.0), django.core.validators.MaxValueValidator(90.0)], verbose_name='Latitude')),
                ('lon', models.FloatField(blank=True, help_text='Geographical longitude of the meeting location.', null=True, validators=[django.core.validators.MinValueValidator(-180.0), django.core.validators.MaxValueValidator(180.0)], verbose_name='Longitude')),
                ('started_at', models.DateTimeField(blank=True, help_text='Timestamp when the meeting started.', null=True, verbose_name='Started At')),
                ('completed_at', models.DateTimeField(blank=True, help_text='Timestamp when the meeting was completed.', null=True, verbose_name='Completed At')),
                ('status', models.CharField(choices=[('started', 'Started'), ('completed', 'Completed')], default='started', help_text='Current status of the meeting.', max_length=20, verbose_name='Meeting Status')),
                ('synced', models.BooleanField(default=True, help_text='Indicated whether data is synced from mobile app or not.', verbose_name='Synced')),
            ],
            options={
                'verbose_name': 'VCG Meeting',
                'verbose_name_plural': 'VCG Meetings',
                'db_table': 'tbl_vcg_meeting',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='VCGMeetingImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(help_text='Upload an image related to the meeting.', upload_to='meeting_images/', verbose_name='Meeting Image')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of when this image was uploaded.', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of the last update to this record.', verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'VCG Meeting Image',
                'verbose_name_plural': 'VCG Meeting Images',
                'db_table': 'tbl_meeting_images',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VCGMemberAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent')], default='absent', help_text='Indicates whether the member was present or absent.', max_length=50, verbose_name='Attendance Status')),
                ('date', models.DateTimeField(auto_now=True, help_text='Timestamp of when the attendance was recorded.', verbose_name='Attendance Date')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of when this record was created.', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of the last update to this record.', verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'VCG Member Attendance',
                'verbose_name_plural': 'VCG Member Attendances',
                'db_table': 'tbl_member_attendance',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='VCGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('whatsapp_num', models.CharField(blank=True, help_text="Member's WhatsApp contact number.", max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Enter a valid WhatsApp number with country code (e.g., +1234567890).', regex='^\\+?\\d{10,15}$')], verbose_name='WhatsApp Number')),
                ('member_code', models.CharField(blank=True, help_text='Unique identifier for the VCG member.', max_length=20, null=True, unique=True, verbose_name='Member Code')),
                ('member_ex_code', models.CharField(blank=True, help_text='Unique identifier for the VCG member.', max_length=20, null=True, unique=True, verbose_name='Member Code')),
                ('member_name', models.CharField(blank=True, help_text='Full name of the VCG member.', max_length=100, null=True, verbose_name='Member Name')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the member was added.', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the member record was last updated.', verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'VCG Group',
                'verbose_name_plural': 'VCG Groups',
                'db_table': 'tbl_vcg_member',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ZeroDaysPourerReason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(help_text='Reason for zero days pouring.', max_length=150, unique=True, verbose_name='Reason')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when this reason was added.', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when this reason was last updated.', verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Zero Days Pouring Reason',
                'verbose_name_plural': 'Zero Days Pouring Reasons',
                'db_table': 'tbl_zero_days_pouring',
                'ordering': ['reason'],
            },
        ),
        migrations.CreateModel(
            name='ZeroDaysPouringReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_code', models.CharField(blank=True, help_text='Unique identifier for the VCG member.', max_length=20, null=True, unique=True, verbose_name='Member Code')),
                ('member_ex_code', models.CharField(blank=True, help_text='Unique identifier for the VCG member.', max_length=20, null=True, unique=True, verbose_name='Member Code')),
                ('member_name', models.CharField(blank=True, help_text='Full name of the VCG member.', max_length=100, null=True, verbose_name='Member Name')),
                ('meeting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meeting_zero_days_pouring', to='facilitator.vcgmeeting')),
                ('reason', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='zero_pouring_reason', to='facilitator.zerodayspourerreason')),
            ],
            options={
                'verbose_name': 'Zero Days Pouring Report',
                'verbose_name_plural': 'Zero Days Pouring Reports',
                'db_table': 'tbl_zerodays_report',
            },
        ),
        migrations.AddIndex(
            model_name='zerodayspourerreason',
            index=models.Index(fields=['reason'], name='tbl_zero_da_reason_54056e_idx'),
        ),
        migrations.AddIndex(
            model_name='vcgroup',
            index=models.Index(fields=['member_code'], name='tbl_vcg_mem_member__b56338_idx'),
        ),
        migrations.AddIndex(
            model_name='vcgroup',
            index=models.Index(fields=['whatsapp_num'], name='tbl_vcg_mem_whatsap_b9ccbb_idx'),
        ),
        migrations.AddConstraint(
            model_name='vcgroup',
            constraint=models.UniqueConstraint(fields=('member_code',), name='unique_vcg_member_code'),
        ),
        migrations.AddField(
            model_name='vcgmemberattendance',
            name='group_member',
            field=models.ForeignKey(blank=True, help_text='The VCG member attending the meeting.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vcg_attendance', to='facilitator.vcgroup', verbose_name='Group Member'),
        ),
        migrations.AddField(
            model_name='vcgmemberattendance',
            name='meeting',
            field=models.ForeignKey(blank=True, help_text='The meeting to which this attendance record belongs.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='facilitator.vcgmeeting', verbose_name='Meeting'),
        ),
        migrations.AddField(
            model_name='vcgmeetingimages',
            name='meeting',
            field=models.ForeignKey(help_text='The meeting associated with this image.', on_delete=django.db.models.deletion.CASCADE, related_name='meeting_images', to='facilitator.vcgmeeting', verbose_name='Meeting'),
        ),
        migrations.AddField(
            model_name='vcgmeeting',
            name='user',
            field=models.ForeignKey(blank=True, help_text='User who initiated the meeting.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='meetings', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddIndex(
            model_name='monthassignment',
            index=models.Index(fields=['mpp_code'], name='tbl_month_a_mpp_cod_989424_idx'),
        ),
        migrations.AddIndex(
            model_name='monthassignment',
            index=models.Index(fields=['milk_collection'], name='tbl_month_a_milk_co_d1ceac_idx'),
        ),
        migrations.AddConstraint(
            model_name='monthassignment',
            constraint=models.UniqueConstraint(fields=('mpp_code', 'month'), name='unique_mpp_month_assignment'),
        ),
        migrations.AddField(
            model_name='membercomplaintreport',
            name='meeting',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meeting_member_complaints', to='facilitator.vcgmeeting'),
        ),
        migrations.AddField(
            model_name='membercomplaintreport',
            name='reason',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_complaint_reason', to='facilitator.membercomplaintreason'),
        ),
        migrations.AddIndex(
            model_name='membercomplaintreason',
            index=models.Index(fields=['reason'], name='tbl_member__reason_ecbbb4_idx'),
        ),
        migrations.AddIndex(
            model_name='vcgmemberattendance',
            index=models.Index(fields=['meeting'], name='tbl_member__meeting_4ef8b3_idx'),
        ),
        migrations.AddIndex(
            model_name='vcgmemberattendance',
            index=models.Index(fields=['group_member'], name='tbl_member__group_m_acea55_idx'),
        ),
        migrations.AddIndex(
            model_name='vcgmemberattendance',
            index=models.Index(fields=['status'], name='tbl_member__status_e7c2e6_idx'),
        ),
        migrations.AddConstraint(
            model_name='vcgmemberattendance',
            constraint=models.UniqueConstraint(fields=('meeting', 'group_member'), name='unique_meeting_member_attendance'),
        ),
        migrations.AddIndex(
            model_name='vcgmeetingimages',
            index=models.Index(fields=['meeting'], name='tbl_meeting_meeting_e9653f_idx'),
        ),
        migrations.AddIndex(
            model_name='vcgmeetingimages',
            index=models.Index(fields=['created_at'], name='tbl_meeting_created_714ed3_idx'),
        ),
        migrations.AddIndex(
            model_name='vcgmeeting',
            index=models.Index(fields=['meeting_id'], name='tbl_vcg_mee_meeting_40ec7d_idx'),
        ),
        migrations.AddIndex(
            model_name='vcgmeeting',
            index=models.Index(fields=['status'], name='tbl_vcg_mee_status_ce55e5_idx'),
        ),
        migrations.AddConstraint(
            model_name='vcgmeeting',
            constraint=models.UniqueConstraint(fields=('mpp_name', 'mpp_code'), name='unique_mpp_name_code'),
        ),
    ]
