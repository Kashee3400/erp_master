# Generated by Django 4.2 on 2025-07-17 08:40

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('facilitator', '0013_uploadedfile_fileactionlog'),
    ]

    operations = [
        migrations.CreateModel(
            name='UpdateRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mobile_number', models.CharField(blank=True, help_text="Member's WhatsApp contact number.", max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Enter a valid WhatsApp number with country code (e.g., +1234567890).', regex='^\\+?\\d{10,15}$')], verbose_name='WhatsApp Number')),
                ('member_code', models.CharField(blank=True, help_text='Unique identifier for the VCG member.', max_length=20, null=True, unique=True, verbose_name='Member Code')),
                ('member_ex_code', models.CharField(blank=True, help_text='Unique identifier for the VCG member.', max_length=20, null=True, unique=True, verbose_name='Member Ex Code')),
                ('member_name', models.CharField(blank=True, help_text='Full name of the VCG member.', max_length=100, null=True, verbose_name='Member Name')),
                ('role_type', models.CharField(choices=[('SAHAYAK', 'Sahayak'), ('MEMBER', 'Member')], max_length=10, verbose_name='Role Type')),
                ('request_type', models.CharField(choices=[('MOBILE', 'Mobile Number'), ('BANK', 'Bank Account Details')], max_length=10, verbose_name='Update Type')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=10, verbose_name='Status')),
                ('new_mobile_number', models.CharField(blank=True, help_text='Required if update type is Mobile', max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Enter a valid WhatsApp number with country code (e.g., +1234567890).', regex='^\\+?\\d{10,15}$')], verbose_name='New Mobile Number')),
                ('new_account_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='New Account Number')),
                ('new_account_holder_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='New Account Holder Name')),
                ('bank_name', models.CharField(blank=True, help_text='Enter the name of the bank (e.g., State Bank of India)', max_length=255, null=True, verbose_name='Bank Name')),
                ('branch_name', models.CharField(blank=True, help_text='Enter the branch name (e.g., Main Branch, Jaipur)', max_length=255, null=True, verbose_name='Branch Name')),
                ('ifsc', models.CharField(blank=True, help_text='Enter the IFSC code associated with this bank branch (e.g., SBIN0001234)', max_length=15, null=True, verbose_name='IFSC Code')),
                ('passbook_image', models.FileField(blank=True, null=True, upload_to='passbooks/', verbose_name='Passbook Copy')),
                ('member_application', models.FileField(blank=True, null=True, upload_to='applications/', verbose_name='Application Letter')),
                ('affidavit_file', models.FileField(blank=True, null=True, upload_to='affidavits/', verbose_name='Affidavit Copy')),
                ('reviewed_at', models.DateTimeField(blank=True, null=True, verbose_name='Reviewed At')),
                ('ho_comments', models.TextField(blank=True, null=True, verbose_name='HO Comments')),
                ('rejection_reason', models.TextField(blank=True, null=True, verbose_name='Rejection Reason')),
                ('requested_at', models.DateTimeField(auto_now_add=True, verbose_name='Requested At')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('facilitator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='submitted_requests', to=settings.AUTH_USER_MODEL, verbose_name='Facilitator')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='reviewed_requests', to=settings.AUTH_USER_MODEL, verbose_name='Reviewed By')),
            ],
            options={
                'verbose_name': 'Update Request',
                'verbose_name_plural': 'Update Requests',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='UpdateAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changed_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Changed At')),
                ('summary', models.TextField(verbose_name='Change Summary')),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Action Taken By')),
                ('update_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='facilitator.updaterequest', verbose_name='Original Request')),
            ],
            options={
                'verbose_name': 'Audit Log',
                'verbose_name_plural': 'Audit Logs',
                'ordering': ['-changed_at'],
            },
        ),
    ]
