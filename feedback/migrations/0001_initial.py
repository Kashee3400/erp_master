# Generated by Django 4.2 on 2025-06-16 10:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_id', models.CharField(blank=True, editable=False, help_text='Unique identifier for this feedback entry. Auto-generated.', max_length=50, unique=True, verbose_name='Feedback ID')),
                ('assigned_at', models.DateTimeField(blank=True, help_text='Timestamp when the feedback was assigned.', null=True, verbose_name='Assigned At')),
                ('mpp_code', models.CharField(blank=True, help_text='MPP Code related to the feedback. Must be exactly 9 characters.', max_length=9, null=True, verbose_name='MPP Code')),
                ('mcc_code', models.CharField(blank=True, help_text='Milk Collection Center code linked to this feedback.', max_length=50, null=True, verbose_name='MCC Code')),
                ('member_code', models.CharField(blank=True, help_text='Unique identifier for the member associated with this feedback.', max_length=50, null=True, verbose_name='Member Code')),
                ('member_tr_code', models.CharField(blank=True, help_text='Transaction code related to the member, if applicable.', max_length=50, null=True, verbose_name='Member Transaction Code')),
                ('name', models.CharField(blank=True, help_text='Full name of the member.', max_length=255, null=True, verbose_name='Member Name')),
                ('mobile_no', models.CharField(blank=True, help_text='Contact mobile number of the member.', max_length=15, null=True, verbose_name='Mobile Number')),
                ('status', models.CharField(choices=[('open', 'Open'), ('assigned', 'Assigned'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed'), ('reopened', 'Reopened')], default='open', help_text='Current status of the feedback.', max_length=100, verbose_name='Feedback Status')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', help_text='Priority level of the feedback.', max_length=10, verbose_name='Priority')),
                ('category', models.CharField(blank=True, help_text='Category or type of feedback.', max_length=100, null=True, verbose_name='Category')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the feedback was created.', verbose_name='Created At')),
                ('resolved_at', models.DateTimeField(blank=True, help_text='Timestamp when the feedback was marked as resolved.', null=True, verbose_name='Resolved At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of the most recent update to the feedback.', verbose_name='Last Updated At')),
                ('message', models.TextField(help_text='Detailed description or content of the feedback.', verbose_name='Message')),
                ('deleted', models.BooleanField(default=False, help_text='Indicates whether this feedback is deleted (soft delete).', verbose_name='Is Deleted')),
                ('assigned_to', models.ForeignKey(blank=True, help_text='User assigned to review or resolve this feedback.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_assigned_feedbacks', to=settings.AUTH_USER_MODEL, verbose_name='Assigned To')),
                ('sender', models.ForeignKey(help_text='User who submitted the feedback.', on_delete=django.db.models.deletion.CASCADE, related_name='user_sent_feedbacks', to=settings.AUTH_USER_MODEL, verbose_name='Sender')),
            ],
            options={
                'verbose_name': 'Sahayak Feedback',
                'verbose_name_plural': 'Sahayak Feedbacks',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FeedbackLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_status', models.CharField(blank=True, max_length=100, null=True, verbose_name='Previous Status')),
                ('new_status', models.CharField(max_length=100, verbose_name='New Status')),
                ('reason', models.TextField(blank=True, verbose_name='Log Remark')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('feedback', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacklogs', to='feedback.feedback')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_feedback_logs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='feedback_files/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('feedback', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='feedback.feedback')),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commented_by', models.CharField(max_length=150)),
                ('comment', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('feedback', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='feedback.feedback')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
