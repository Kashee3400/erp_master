# Generated by Django 4.2 on 2025-10-18 09:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
        ('notifications', '0005_notification_notificationtemplate_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='notificationdelivery',
            options={'verbose_name': 'Notification Delivery', 'verbose_name_plural': 'Notification Deliveries'},
        ),
        migrations.AddField(
            model_name='notification',
            name='error_message',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='notification',
            name='app_route',
            field=models.CharField(blank=True, help_text='Internal app route for in-app navigation.', max_length=255, verbose_name='App Route'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='body',
            field=models.TextField(help_text='Notification message body displayed to the user.', verbose_name='Body'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='channels',
            field=models.JSONField(default=list, help_text='List of channels to deliver this notification through (push, email, sms, in_app).', verbose_name='Delivery Channels'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='content_type',
            field=models.ForeignKey(blank=True, help_text='Type of the related object this notification refers to.', null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Content Type'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='context_data',
            field=models.JSONField(blank=True, default=dict, help_text='Additional context data for templating and deep linking.', verbose_name='Context Data'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True, help_text='Datetime when the notification record was created.', verbose_name='Created At'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='deep_link_url',
            field=models.URLField(blank=True, help_text='Full URL for deep linking (web or universal link).', max_length=500, verbose_name='Deep Link URL'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='delivered_at',
            field=models.DateTimeField(blank=True, help_text='Datetime when the notification was successfully delivered.', null=True, verbose_name='Delivered At'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='delivery_status',
            field=models.JSONField(blank=True, default=dict, help_text='Per-channel delivery status and responses from external services.', verbose_name='Delivery Status'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='email_body',
            field=models.TextField(blank=True, help_text='Body content for email notifications, if applicable.', verbose_name='Email Body'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='email_subject',
            field=models.CharField(blank=True, help_text='Subject line for email notifications, if applicable.', max_length=255, verbose_name='Email Subject'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='expires_at',
            field=models.DateTimeField(blank=True, help_text='Datetime after which the notification is no longer relevant.', null=True, verbose_name='Expires At'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='is_archived',
            field=models.BooleanField(default=False, help_text='Whether the notification has been archived by the recipient.', verbose_name='Is Archived'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='is_read',
            field=models.BooleanField(db_index=True, default=False, help_text='Whether the recipient has read this notification.', verbose_name='Is Read'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='notification_type',
            field=models.CharField(choices=[('info', 'Information'), ('success', 'Success'), ('warning', 'Warning'), ('error', 'Error')], default='info', help_text='Type of notification (info, alert, etc.).', max_length=10, verbose_name='Notification Type'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='object_id',
            field=models.PositiveIntegerField(blank=True, help_text='ID of the related object this notification refers to.', null=True, verbose_name='Object ID'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='priority',
            field=models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', help_text='Priority level of the notification (low, normal, high).', max_length=10, verbose_name='Priority'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='read_at',
            field=models.DateTimeField(blank=True, help_text='Datetime when the recipient read the notification.', null=True, verbose_name='Read At'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='recipient',
            field=models.ForeignKey(help_text='The user who will receive this notification.', on_delete=django.db.models.deletion.CASCADE, related_name='received_app_notifications', to=settings.AUTH_USER_MODEL, verbose_name='Recipient'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='scheduled_at',
            field=models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='Datetime when the notification is scheduled to be sent.', verbose_name='Scheduled At'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='sender',
            field=models.ForeignKey(blank=True, help_text='The user who sent this notification, if applicable.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_app_notifications', to=settings.AUTH_USER_MODEL, verbose_name='Sender'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='sent_at',
            field=models.DateTimeField(blank=True, help_text='Datetime when the notification was sent.', null=True, verbose_name='Sent At'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('queued', 'Queued'), ('sending', 'Sending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], db_index=True, default='pending', help_text='Current status of the notification (pending, sent, delivered, failed).', max_length=20, verbose_name='Status'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='template',
            field=models.ForeignKey(help_text='The template used to generate this notification.', on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='notifications.notificationtemplate', verbose_name='Notification Template'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='title',
            field=models.CharField(help_text='Notification title displayed to the user.', max_length=255, verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Datetime when the notification record was last updated.', verbose_name='Updated At'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='Unique identifier for this notification (auto-generated).', unique=True, verbose_name='UUID'),
        ),
        migrations.AlterField(
            model_name='notificationdelivery',
            name='attempt_count',
            field=models.IntegerField(default=0, help_text='Number of delivery attempts made for this notification.', verbose_name='Attempt Count'),
        ),
        migrations.AlterField(
            model_name='notificationdelivery',
            name='channel',
            field=models.CharField(choices=[('in_app', 'In-App'), ('push', 'Push Notification'), ('email', 'Email'), ('sms', 'SMS'), ('webhook', 'Webhook')], default='push', help_text='The channel used to deliver the notification (e.g., email, SMS, push).', max_length=50, verbose_name='Delivery Channel'),
        ),
        migrations.AlterField(
            model_name='notificationdelivery',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='Timestamp when this record was created.', verbose_name='Created At'),
        ),
        migrations.AlterField(
            model_name='notificationdelivery',
            name='delivered_at',
            field=models.DateTimeField(blank=True, help_text='Timestamp when the notification was successfully delivered.', null=True, verbose_name='Delivered At'),
        ),
        migrations.AlterField(
            model_name='notificationdelivery',
            name='error_message',
            field=models.TextField(blank=True, help_text='Error message if the delivery attempt failed.', verbose_name='Error Message'),
        ),
        migrations.AlterField(
            model_name='notificationdelivery',
            name='external_id',
            field=models.CharField(blank=True, help_text='ID provided by the external delivery service.', max_length=255, verbose_name='External ID'),
        ),
        migrations.AlterField(
            model_name='notificationdelivery',
            name='failed_at',
            field=models.DateTimeField(blank=True, help_text='Timestamp when the delivery attempt failed.', null=True, verbose_name='Failed At'),
        ),
        migrations.AlterField(
            model_name='notificationdelivery',
            name='max_attempts',
            field=models.IntegerField(default=3, help_text='Maximum allowed attempts before marking as failed.', verbose_name='Maximum Attempts'),
        ),
        migrations.AlterField(
            model_name='notificationdelivery',
            name='next_attempt_at',
            field=models.DateTimeField(blank=True, help_text='Scheduled time for the next delivery attempt.', null=True, verbose_name='Next Attempt At'),
        ),
        migrations.AlterField(
            model_name='notificationdelivery',
            name='notification',
            field=models.ForeignKey(help_text='The notification instance associated with this delivery attempt.', on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='notifications.notification', verbose_name='Notification'),
        ),
        migrations.AlterField(
            model_name='notificationdelivery',
            name='recipient',
            field=models.CharField(help_text='Recipient identifier: email, phone number, or device token.', max_length=255, verbose_name='Recipient'),
        ),
        migrations.AlterField(
            model_name='notificationdelivery',
            name='response_data',
            field=models.JSONField(blank=True, default=dict, help_text='Raw response data returned by the delivery channel.', verbose_name='Response Data'),
        ),
        migrations.AlterField(
            model_name='notificationdelivery',
            name='sent_at',
            field=models.DateTimeField(blank=True, help_text='Timestamp when the notification was sent.', null=True, verbose_name='Sent At'),
        ),
        migrations.AlterField(
            model_name='notificationdelivery',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('queued', 'Queued'), ('sending', 'Sending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', help_text='Current status of the delivery attempt.', max_length=20, verbose_name='Delivery Status'),
        ),
        migrations.AlterField(
            model_name='notificationdelivery',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Timestamp when this record was last updated.', verbose_name='Updated At'),
        ),
        migrations.AlterField(
            model_name='notificationgroup',
            name='color',
            field=models.CharField(default='#007bff', help_text='Hex color code representing this notification group.', max_length=7, verbose_name='Color'),
        ),
        migrations.AlterField(
            model_name='notificationgroup',
            name='content_type',
            field=models.ForeignKey(blank=True, help_text='Type of the related object triggering this notification group.', null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Content Type'),
        ),
        migrations.AlterField(
            model_name='notificationgroup',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='Timestamp when this notification group was created.', verbose_name='Created At'),
        ),
        migrations.AlterField(
            model_name='notificationgroup',
            name='description',
            field=models.TextField(blank=True, help_text='Optional description explaining the purpose of this group.', verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='notificationgroup',
            name='icon',
            field=models.CharField(blank=True, help_text='Icon class or emoji representing the notification group.', max_length=50, verbose_name='Icon'),
        ),
        migrations.AlterField(
            model_name='notificationgroup',
            name='name',
            field=models.CharField(help_text='Human-readable name for the notification group.', max_length=100, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='notificationgroup',
            name='object_id',
            field=models.PositiveIntegerField(blank=True, help_text='ID of the related object triggering this group.', null=True, verbose_name='Object ID'),
        ),
        migrations.AlterField(
            model_name='notificationgroup',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this notification group (auto-generated).', unique=True, verbose_name='UUID'),
        ),
        migrations.AlterField(
            model_name='notificationpreferences',
            name='allow_email',
            field=models.BooleanField(default=True, help_text='Whether the user wants to receive email notifications for this template or category.', verbose_name='Allow Email Notifications'),
        ),
        migrations.AlterField(
            model_name='notificationpreferences',
            name='allow_in_app',
            field=models.BooleanField(default=True, help_text='Whether the user wants to receive in-app notifications for this template or category.', verbose_name='Allow In-App Notifications'),
        ),
        migrations.AlterField(
            model_name='notificationpreferences',
            name='allow_push',
            field=models.BooleanField(default=True, help_text='Whether the user wants to receive push notifications for this template or category.', verbose_name='Allow Push Notifications'),
        ),
        migrations.AlterField(
            model_name='notificationpreferences',
            name='allow_sms',
            field=models.BooleanField(default=False, help_text='Whether the user wants to receive SMS notifications for this template or category.', verbose_name='Allow SMS Notifications'),
        ),
        migrations.AlterField(
            model_name='notificationpreferences',
            name='category',
            field=models.CharField(blank=True, help_text='Category of notifications for which these preferences apply.', max_length=50, verbose_name='Category'),
        ),
        migrations.AlterField(
            model_name='notificationpreferences',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='Timestamp when this preference record was created.', verbose_name='Created At'),
        ),
        migrations.AlterField(
            model_name='notificationpreferences',
            name='quiet_hours_end',
            field=models.TimeField(blank=True, help_text='End time for quiet hours during which notifications should not be sent.', null=True, verbose_name='Quiet Hours End'),
        ),
        migrations.AlterField(
            model_name='notificationpreferences',
            name='quiet_hours_start',
            field=models.TimeField(blank=True, help_text='Start time for quiet hours during which notifications should not be sent.', null=True, verbose_name='Quiet Hours Start'),
        ),
        migrations.AlterField(
            model_name='notificationpreferences',
            name='template',
            field=models.ForeignKey(blank=True, help_text='Specific notification template this preference applies to. Leave blank for category-wide preferences.', null=True, on_delete=django.db.models.deletion.CASCADE, to='notifications.notificationtemplate', verbose_name='Notification Template'),
        ),
        migrations.AlterField(
            model_name='notificationpreferences',
            name='timezone',
            field=models.CharField(default='UTC', help_text='Timezone used to interpret quiet hours and other time-based preferences.', max_length=50, verbose_name='Timezone'),
        ),
        migrations.AlterField(
            model_name='notificationpreferences',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Timestamp when this preference record was last updated.', verbose_name='Updated At'),
        ),
        migrations.AlterField(
            model_name='notificationpreferences',
            name='user',
            field=models.ForeignKey(help_text='The user for whom these notification preferences apply.', on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
    ]
