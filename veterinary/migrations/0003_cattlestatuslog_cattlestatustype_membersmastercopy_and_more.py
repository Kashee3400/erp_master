# Generated by Django 4.2 on 2025-07-29 06:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
        ('veterinary', '0002_auto_20250724_1756'),
    ]

    operations = [
        migrations.CreateModel(
            name='CattleStatusLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated', verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates whether the record is active', verbose_name='Is Active')),
                ('is_deleted', models.BooleanField(default=False, help_text='Indicates whether the record is soft-deleted', verbose_name='Is Deleted')),
                ('sync', models.BooleanField(default=False, help_text='Indicates if the record is synced with the server', verbose_name='Synced')),
                ('locale', models.CharField(choices=[('hi', 'Hindi'), ('en', 'English')], default='en-us', help_text='Locale used for this entry (e.g. en, hi, te)', max_length=10, verbose_name='Locale')),
                ('from_date', models.DateField(verbose_name='From Date')),
                ('to_date', models.DateField(blank=True, null=True, verbose_name='To Date')),
                ('notes', models.TextField(blank=True, help_text='Any remarks from field vet or technician', null=True)),
            ],
            options={
                'verbose_name': 'Cattle Status Log',
                'verbose_name_plural': 'Cattle Status Logs',
                'ordering': ['-from_date'],
            },
        ),
        migrations.CreateModel(
            name='CattleStatusType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated', verbose_name='Updated At')),
                ('is_deleted', models.BooleanField(default=False, help_text='Indicates whether the record is soft-deleted', verbose_name='Is Deleted')),
                ('sync', models.BooleanField(default=False, help_text='Indicates if the record is synced with the server', verbose_name='Synced')),
                ('locale', models.CharField(choices=[('hi', 'Hindi'), ('en', 'English')], default='en-us', help_text='Locale used for this entry (e.g. en, hi, te)', max_length=10, verbose_name='Locale')),
                ('code', models.CharField(help_text='e.g., DRY, MILKING, PREGNANT', max_length=30, unique=True, verbose_name='Status Code')),
                ('label', models.CharField(help_text='Human-readable label', max_length=100, verbose_name='Status Label')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Cattle Status Type',
                'verbose_name_plural': 'Cattle Status Types',
                'ordering': ['label'],
            },
        ),
        migrations.CreateModel(
            name='MembersMasterCopy',
            fields=[
                ('company_code', models.CharField(blank=True, help_text='Code representing the company.', max_length=50, null=True, verbose_name='Company Code')),
                ('plant_code', models.CharField(blank=True, help_text='Code representing the plant.', max_length=50, null=True, verbose_name='Plant Code')),
                ('mcc_code', models.CharField(blank=True, help_text='Milk Collection Center Code.', max_length=50, null=True, verbose_name='MCC Code')),
                ('bmc_code', models.CharField(blank=True, help_text='Bulk Milk Cooler code.', max_length=50, null=True, verbose_name='BMC Code')),
                ('mpp_code', models.CharField(blank=True, help_text='Milk Procurement Point Code.', max_length=50, null=True, verbose_name='MPP Code')),
                ('member_code', models.CharField(help_text='Unique identifier for the member.', max_length=50, primary_key=True, serialize=False, verbose_name='Member Code')),
                ('member_tr_code', models.CharField(blank=True, help_text='Member transaction code if any.', max_length=50, null=True, verbose_name='Transaction Code')),
                ('member_name', models.CharField(blank=True, help_text='First name of the member.', max_length=255, null=True, verbose_name='Member First Name')),
                ('member_middle_name', models.CharField(blank=True, help_text='Middle name of the member.', max_length=255, null=True, verbose_name='Middle Name')),
                ('member_surname', models.CharField(blank=True, help_text='Last name of the member.', max_length=255, null=True, verbose_name='Surname')),
                ('gender', models.CharField(blank=True, help_text='Gender of the member (e.g., Male, Female).', max_length=10, null=True, verbose_name='Gender')),
                ('mobile_no', models.CharField(blank=True, help_text='Mobile number of the member.', max_length=15, null=True, verbose_name='Mobile Number')),
                ('member_type', models.CharField(blank=True, help_text='Type/category of member (e.g., Regular, Associate).', max_length=50, null=True, verbose_name='Member Type')),
                ('caste_category', models.CharField(blank=True, help_text='Caste category for the member (for regulatory tracking).', max_length=50, null=True, verbose_name='Caste Category')),
                ('birth_date', models.DateField(blank=True, help_text='Birth date of the member.', null=True, verbose_name='Date of Birth')),
                ('age', models.IntegerField(blank=True, help_text='Age of the member (auto-calculated or user-provided).', null=True, verbose_name='Age')),
                ('is_active', models.BooleanField(default=True, help_text='Is the member currently active?', verbose_name='Is Active')),
                ('wef_date', models.DateField(blank=True, help_text='With effect from date â€” when the member joined.', null=True, verbose_name='W.E.F Date')),
                ('is_default', models.BooleanField(default=False, help_text='Marks if this record is default for the member (used in hierarchies).', verbose_name='Is Default')),
                ('created_at', models.DateTimeField(help_text='Timestamp when the record was created.', verbose_name='Created At')),
                ('folio_no', models.CharField(blank=True, help_text='Folio or account number of the member.', max_length=50, null=True, verbose_name='Folio Number')),
                ('application_date', models.DateField(blank=True, help_text='Date of application submission.', null=True, verbose_name='Application Date')),
                ('application_no', models.CharField(blank=True, help_text='Unique application number for member registration.', max_length=50, null=True, verbose_name='Application Number')),
                ('created_by', models.CharField(blank=True, help_text='External system or user who created the record.', max_length=50, null=True, verbose_name='Created By (External)')),
                ('member_master_relation', models.CharField(blank=True, help_text='Description of the relationship (e.g., S/o, D/o).', max_length=255, null=True, verbose_name='Relation Description')),
                ('ex_member_code', models.CharField(blank=True, help_text='Old member code if migrated from previous systems.', max_length=50, null=True, verbose_name='Ex-Member Code')),
                ('device_id', models.CharField(blank=True, help_text='Device identifier if data was captured via mobile.', max_length=50, null=True, verbose_name='Device ID')),
            ],
            options={
                'verbose_name': 'Member Master Copy',
                'verbose_name_plural': 'Member Masters',
                'db_table': 'member_master_copy',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated', verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates whether the record is active', verbose_name='Is Active')),
                ('is_deleted', models.BooleanField(default=False, help_text='Indicates whether the record is soft-deleted', verbose_name='Is Deleted')),
                ('sync', models.BooleanField(default=False, help_text='Indicates if the record is synced with the server', verbose_name='Synced')),
                ('locale', models.CharField(choices=[('hi', 'Hindi'), ('en', 'English')], default='en-us', help_text='Locale used for this entry (e.g. en, hi, te)', max_length=10, verbose_name='Locale')),
                ('animal_type', models.CharField(help_text='Enter the type of animal (e.g., Cow, Buffalo)', max_length=100, unique=True, verbose_name='Animal Type')),
                ('scientific_name', models.CharField(blank=True, help_text='Scientific name of the animal (e.g., Bos taurus for Cow)', max_length=150, null=True, verbose_name='Scientific Name')),
                ('category', models.CharField(choices=[('dairy', 'Dairy'), ('beef', 'Beef'), ('dual', 'Dual Purpose'), ('other', 'Other')], default='dairy', help_text='Primary use category of the animal', max_length=50, verbose_name='Category')),
                ('description', models.TextField(blank=True, help_text='Optional detailed description or notes', null=True, verbose_name='Description')),
                ('average_lifespan', models.PositiveIntegerField(blank=True, help_text='Average lifespan in years (e.g., 15)', null=True, verbose_name='Average Lifespan')),
                ('is_milk_producing', models.BooleanField(default=True, help_text='Is this animal type typically used for milk production?', verbose_name='Milk Producing')),
                ('slug', models.SlugField(blank=True, unique=True)),
            ],
            options={
                'verbose_name': 'Cattle Type',
                'verbose_name_plural': 'Cattle Types',
                'db_table': 'tbl_species',
                'ordering': ['animal_type'],
            },
        ),
        migrations.CreateModel(
            name='SpeciesBreed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated', verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates whether the record is active', verbose_name='Is Active')),
                ('is_deleted', models.BooleanField(default=False, help_text='Indicates whether the record is soft-deleted', verbose_name='Is Deleted')),
                ('sync', models.BooleanField(default=False, help_text='Indicates if the record is synced with the server', verbose_name='Synced')),
                ('locale', models.CharField(choices=[('hi', 'Hindi'), ('en', 'English')], default='en-us', help_text='Locale used for this entry (e.g. en, hi, te)', max_length=10, verbose_name='Locale')),
                ('breed', models.CharField(help_text='Enter the breed name (e.g., Jersey, Holstein)', max_length=100, verbose_name='Breed')),
                ('origin_country', models.CharField(blank=True, help_text='Country or region where this breed originated', max_length=100, null=True, verbose_name='Country of Origin')),
                ('average_milk_yield', models.DecimalField(blank=True, decimal_places=2, help_text='Average daily milk yield in liters (e.g., 22.50)', max_digits=6, null=True, verbose_name='Avg Milk Yield (L/day)')),
                ('color', models.CharField(blank=True, help_text='Typical coat color of the breed (e.g., brown, black-and-white)', max_length=50, null=True, verbose_name='Coat Color')),
                ('adaptability', models.TextField(blank=True, help_text='Notes on climate or region adaptability', null=True, verbose_name='Adaptability')),
                ('description', models.TextField(blank=True, help_text='Additional notes or characteristics', null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Cattle Breed',
                'verbose_name_plural': 'Cattle Breeds',
                'db_table': 'tbl_species_breed',
                'ordering': ['breed'],
            },
        ),
        migrations.CreateModel(
            name='VeterinaryAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('created', 'Created'), ('updated', 'Updated'), ('deleted', 'Deleted')], max_length=50)),
                ('object_id', models.CharField(max_length=100)),
                ('changed_by', models.CharField(max_length=100)),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('change_data', models.JSONField()),
            ],
            options={
                'ordering': ['-changed_at'],
            },
        ),
        migrations.RemoveField(
            model_name='animalbreed',
            name='animal_type',
        ),
        migrations.RemoveField(
            model_name='animalbreed',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='animalbreed',
            name='updated_by',
        ),
        migrations.RemoveField(
            model_name='animaldiagnosis',
            name='case_entry',
        ),
        migrations.RemoveField(
            model_name='animaldiagnosis',
            name='case_type',
        ),
        migrations.RemoveField(
            model_name='animaldiagnosis',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='animaldiagnosis',
            name='disease',
        ),
        migrations.RemoveField(
            model_name='animaldiagnosis',
            name='status',
        ),
        migrations.RemoveField(
            model_name='animaldiagnosis',
            name='updated_by',
        ),
        migrations.RemoveField(
            model_name='animaltreatment',
            name='case_treatment',
        ),
        migrations.RemoveField(
            model_name='animaltreatment',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='animaltreatment',
            name='medicine',
        ),
        migrations.RemoveField(
            model_name='animaltreatment',
            name='route',
        ),
        migrations.RemoveField(
            model_name='animaltreatment',
            name='treatment_by',
        ),
        migrations.RemoveField(
            model_name='animaltreatment',
            name='updated_by',
        ),
        migrations.RemoveField(
            model_name='animaltype',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='animaltype',
            name='updated_by',
        ),
        migrations.RemoveField(
            model_name='artificialinsemination',
            name='cattle',
        ),
        migrations.RemoveField(
            model_name='artificialinsemination',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='artificialinsemination',
            name='performed_by',
        ),
        migrations.RemoveField(
            model_name='artificialinsemination',
            name='updated_by',
        ),
        migrations.RemoveField(
            model_name='caseentry',
            name='animal',
        ),
        migrations.RemoveField(
            model_name='caseentry',
            name='applied_by',
        ),
        migrations.RemoveField(
            model_name='caseentry',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='caseentry',
            name='status',
        ),
        migrations.RemoveField(
            model_name='caseentry',
            name='updated_by',
        ),
        migrations.RemoveField(
            model_name='casepayment',
            name='case_entry',
        ),
        migrations.RemoveField(
            model_name='casepayment',
            name='collected_by',
        ),
        migrations.RemoveField(
            model_name='casepayment',
            name='payment_method',
        ),
        migrations.RemoveField(
            model_name='casereceiverlog',
            name='case_entry',
        ),
        migrations.RemoveField(
            model_name='casereceiverlog',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='casereceiverlog',
            name='from_user',
        ),
        migrations.RemoveField(
            model_name='casereceiverlog',
            name='to_user',
        ),
        migrations.RemoveField(
            model_name='casereceiverlog',
            name='updated_by',
        ),
        migrations.RemoveField(
            model_name='cattlestatus',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='cattlestatus',
            name='updated_by',
        ),
        migrations.RemoveField(
            model_name='diagnosedsymptomhistory',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='diagnosedsymptomhistory',
            name='diagnosis',
        ),
        migrations.RemoveField(
            model_name='diagnosedsymptomhistory',
            name='symptom',
        ),
        migrations.RemoveField(
            model_name='diagnosedsymptomhistory',
            name='updated_by',
        ),
        migrations.RemoveField(
            model_name='disease',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='disease',
            name='symptoms',
        ),
        migrations.RemoveField(
            model_name='disease',
            name='updated_by',
        ),
        migrations.RemoveField(
            model_name='medicine',
            name='category',
        ),
        migrations.RemoveField(
            model_name='medicine',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='medicine',
            name='recommended_for_disease',
        ),
        migrations.RemoveField(
            model_name='medicine',
            name='updated_by',
        ),
        migrations.AlterUniqueTogether(
            name='medicinecategory',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='medicinecategory',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='medicinecategory',
            name='parent_category',
        ),
        migrations.RemoveField(
            model_name='medicinecategory',
            name='updated_by',
        ),
        migrations.RemoveField(
            model_name='medicinestock',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='medicinestock',
            name='medicine',
        ),
        migrations.RemoveField(
            model_name='medicinestock',
            name='updated_by',
        ),
        migrations.RemoveField(
            model_name='medicinestockaudit',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='medicinestockaudit',
            name='medicine',
        ),
        migrations.RemoveField(
            model_name='symptoms',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='symptoms',
            name='updated_by',
        ),
        migrations.RemoveField(
            model_name='travelrecord',
            name='case_entry',
        ),
        migrations.RemoveField(
            model_name='usermedicinestock',
            name='allocated_by',
        ),
        migrations.RemoveField(
            model_name='usermedicinestock',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='usermedicinestock',
            name='medicine_stock',
        ),
        migrations.RemoveField(
            model_name='usermedicinestock',
            name='updated_by',
        ),
        migrations.RemoveField(
            model_name='usermedicinestock',
            name='user',
        ),
        migrations.RemoveField(
            model_name='usermedicinetransaction',
            name='user_medicine_stock',
        ),
        migrations.RemoveField(
            model_name='cattle',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='cattle',
            name='module',
        ),
        migrations.RemoveField(
            model_name='cattle',
            name='module_code',
        ),
        migrations.RemoveField(
            model_name='cattlecasestatus',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='cattlecasetype',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='cattletagging',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='paymentmethod',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='timeslot',
            name='created_by',
        ),
        migrations.AddField(
            model_name='cattle',
            name='date_of_birth',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='cattle',
            name='father',
            field=models.ForeignKey(blank=True, help_text='The father of this cattle.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='offspring_from_father', to='veterinary.cattle', verbose_name='Father'),
        ),
        migrations.AddField(
            model_name='cattle',
            name='is_alive',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='cattle',
            name='locale',
            field=models.CharField(choices=[('hi', 'Hindi'), ('en', 'English')], default='en-us', help_text='Locale used for this entry (e.g. en, hi, te)', max_length=10, verbose_name='Locale'),
        ),
        migrations.AddField(
            model_name='cattle',
            name='name',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='cattlecasestatus',
            name='locale',
            field=models.CharField(choices=[('hi', 'Hindi'), ('en', 'English')], default='en-us', help_text='Locale used for this entry (e.g. en, hi, te)', max_length=10, verbose_name='Locale'),
        ),
        migrations.AddField(
            model_name='cattlecasetype',
            name='locale',
            field=models.CharField(choices=[('hi', 'Hindi'), ('en', 'English')], default='en-us', help_text='Locale used for this entry (e.g. en, hi, te)', max_length=10, verbose_name='Locale'),
        ),
        migrations.AddField(
            model_name='cattletagging',
            name='locale',
            field=models.CharField(choices=[('hi', 'Hindi'), ('en', 'English')], default='en-us', help_text='Locale used for this entry (e.g. en, hi, te)', max_length=10, verbose_name='Locale'),
        ),
        migrations.AddField(
            model_name='paymentmethod',
            name='locale',
            field=models.CharField(choices=[('hi', 'Hindi'), ('en', 'English')], default='en-us', help_text='Locale used for this entry (e.g. en, hi, te)', max_length=10, verbose_name='Locale'),
        ),
        migrations.AddField(
            model_name='timeslot',
            name='locale',
            field=models.CharField(choices=[('hi', 'Hindi'), ('en', 'English')], default='en-us', help_text='Locale used for this entry (e.g. en, hi, te)', max_length=10, verbose_name='Locale'),
        ),
        migrations.AlterField(
            model_name='cattle',
            name='age',
            field=models.PositiveIntegerField(help_text='Age of the cattle in months.', verbose_name='Age (months)'),
        ),
        migrations.AlterField(
            model_name='cattle',
            name='gender',
            field=models.CharField(choices=[('male', 'Male'), ('female', 'Female')], default='male', help_text='Gender of the cattle.', max_length=10, verbose_name='Gender'),
        ),
        migrations.AlterField(
            model_name='cattle',
            name='mother',
            field=models.ForeignKey(blank=True, help_text='The mother of this cattle.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='offspring_from_mother', to='veterinary.cattle', verbose_name='Mother'),
        ),
        migrations.AlterField(
            model_name='cattletagging',
            name='tag_number',
            field=models.CharField(help_text='Unique tag number for the cattle (e.g., IND-12345)', max_length=20, unique=True, verbose_name='Tag Number'),
        ),
        migrations.AddConstraint(
            model_name='paymentmethod',
            constraint=models.CheckConstraint(check=models.Q(('locale__in', ['hi', 'en'])), name='valid_locale_check'),
        ),
        migrations.DeleteModel(
            name='AnimalDiagnosis',
        ),
        migrations.DeleteModel(
            name='AnimalTreatment',
        ),
        migrations.DeleteModel(
            name='AnimalType',
        ),
        migrations.DeleteModel(
            name='ArtificialInsemination',
        ),
        migrations.DeleteModel(
            name='CaseEntry',
        ),
        migrations.DeleteModel(
            name='CasePayment',
        ),
        migrations.DeleteModel(
            name='CaseReceiverLog',
        ),
        migrations.DeleteModel(
            name='CattleStatus',
        ),
        migrations.DeleteModel(
            name='DiagnosedSymptomHistory',
        ),
        migrations.DeleteModel(
            name='DiagnosisRoute',
        ),
        migrations.DeleteModel(
            name='Disease',
        ),
        migrations.DeleteModel(
            name='Medicine',
        ),
        migrations.DeleteModel(
            name='MedicineCategory',
        ),
        migrations.DeleteModel(
            name='MedicineStock',
        ),
        migrations.DeleteModel(
            name='MedicineStockAudit',
        ),
        migrations.DeleteModel(
            name='Symptoms',
        ),
        migrations.DeleteModel(
            name='TravelRecord',
        ),
        migrations.DeleteModel(
            name='UserMedicineStock',
        ),
        migrations.DeleteModel(
            name='UserMedicineTransaction',
        ),
        migrations.AddField(
            model_name='veterinaryauditlog',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='speciesbreed',
            name='animal_type',
            field=models.ForeignKey(help_text='Select the animal type this breed belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='breeds', to='veterinary.species'),
        ),
        migrations.AddField(
            model_name='speciesbreed',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated By'),
        ),
        migrations.AddField(
            model_name='species',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated By'),
        ),
        migrations.AddField(
            model_name='membersmastercopy',
            name='user',
            field=models.ForeignKey(blank=True, help_text='Reference to Django user if mapped.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Linked User'),
        ),
        migrations.AddField(
            model_name='cattlestatustype',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated By'),
        ),
        migrations.AddField(
            model_name='cattlestatuslog',
            name='cattle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_logs', to='veterinary.cattle', verbose_name='Cattle'),
        ),
        migrations.AddField(
            model_name='cattlestatuslog',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='veterinary.cattlestatustype', verbose_name='Cattle Status'),
        ),
        migrations.AddField(
            model_name='cattlestatuslog',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated By'),
        ),
        migrations.AddField(
            model_name='cattle',
            name='current_status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='animals_currently_in_status', to='veterinary.cattlestatustype', verbose_name='Current Status'),
        ),
        migrations.AddField(
            model_name='cattle',
            name='owner',
            field=models.ForeignKey(blank=True, help_text='Member who currently owns this cattle.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_cattles', to='veterinary.membersmastercopy', verbose_name='Owner'),
        ),
        migrations.AlterField(
            model_name='cattle',
            name='breed',
            field=models.ForeignKey(blank=True, help_text='Breed of the cattle.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='breed_animals', to='veterinary.speciesbreed', verbose_name='Breed'),
        ),
        migrations.DeleteModel(
            name='AnimalBreed',
        ),
        migrations.AddIndex(
            model_name='speciesbreed',
            index=models.Index(fields=['breed'], name='tbl_species_breed_ee1da4_idx'),
        ),
        migrations.AddIndex(
            model_name='speciesbreed',
            index=models.Index(fields=['animal_type'], name='tbl_species_animal__b954e2_idx'),
        ),
        migrations.AddIndex(
            model_name='species',
            index=models.Index(fields=['animal_type'], name='tbl_species_animal__94ad9d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='species',
            unique_together={('slug', 'locale')},
        ),
        migrations.AddIndex(
            model_name='membersmastercopy',
            index=models.Index(fields=['member_code'], name='member_mast_member__0f6485_idx'),
        ),
        migrations.AddIndex(
            model_name='membersmastercopy',
            index=models.Index(fields=['mobile_no'], name='member_mast_mobile__d6aedb_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='cattlestatustype',
            unique_together={('code', 'locale')},
        ),
        migrations.AddIndex(
            model_name='cattlestatuslog',
            index=models.Index(fields=['cattle', 'from_date'], name='veterinary__cattle__76193d_idx'),
        ),
        migrations.AddIndex(
            model_name='cattlestatuslog',
            index=models.Index(fields=['status'], name='veterinary__status__3f365e_idx'),
        ),
    ]
