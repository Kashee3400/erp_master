# Generated by Django 4.2 on 2025-09-18 08:55

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('veterinary', '0018_exceluploadsession_task_id_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CostConfigurationHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated', verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates whether the record is active', verbose_name='Is Active')),
                ('is_deleted', models.BooleanField(default=False, help_text='Indicates whether the record is soft-deleted', verbose_name='Is Deleted')),
                ('sync', models.BooleanField(default=False, help_text='Indicates if the record is synced with the server', verbose_name='Synced')),
                ('locale', models.CharField(choices=[('en', 'English'), ('hi', 'Hindi'), ('ur', 'Urdu')], default='en-us', help_text='Locale used for this entry (e.g. en, hi, te)', max_length=10, verbose_name='Locale')),
                ('action', models.CharField(choices=[('created', 'Created'), ('updated', 'Updated'), ('deactivated', 'Deactivated'), ('deleted', 'Deleted')], help_text='Action performed', max_length=20)),
                ('old_cost_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Previous cost amount', max_digits=10, null=True)),
                ('new_cost_amount', models.DecimalField(blank=True, decimal_places=2, help_text='New cost amount', max_digits=10, null=True)),
                ('change_reason', models.TextField(blank=True, help_text='Reason for the change')),
            ],
            options={
                'verbose_name': 'Cost Configuration History',
                'verbose_name_plural': 'Cost Configuration History',
                'db_table': 'tbl_cost_config_history',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NonMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated', verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates whether the record is active', verbose_name='Is Active')),
                ('is_deleted', models.BooleanField(default=False, help_text='Indicates whether the record is soft-deleted', verbose_name='Is Deleted')),
                ('locale', models.CharField(choices=[('en', 'English'), ('hi', 'Hindi'), ('ur', 'Urdu')], default='en-us', help_text='Locale used for this entry (e.g. en, hi, te)', max_length=10, verbose_name='Locale')),
                ('non_member_id', models.CharField(help_text='Unique identifier for non-member', max_length=50, unique=True)),
                ('name', models.CharField(help_text='Full name of non-member', max_length=255)),
                ('mobile_no', models.CharField(help_text='Mobile number', max_length=15, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', 'Enter a valid phone number.')])),
                ('mcc_code', models.CharField(blank=True, help_text='Milk Collection Center Code.', max_length=50, null=True, verbose_name='MCC Code')),
                ('mcc_name', models.CharField(blank=True, help_text='Milk Collection Center Code.', max_length=50, null=True, verbose_name='MCC Code')),
                ('mpp_code', models.CharField(blank=True, help_text='Milk Procurement Point Code.', max_length=50, null=True, verbose_name='MPP Code')),
                ('mpp_name', models.CharField(blank=True, help_text='Milk Collection Center Code.', max_length=50, null=True, verbose_name='MCC Code')),
                ('address', models.TextField(help_text='Full address of non-member')),
                ('visit_count', models.PositiveIntegerField(default=0, help_text='Number of visits by this non-member')),
                ('sync', models.BooleanField(default=False, help_text='Sync status with server')),
            ],
            options={
                'verbose_name': 'Non Member',
                'verbose_name_plural': 'Non Members',
                'db_table': 'tbl_non_members',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NonMemberCattle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated', verbose_name='Updated At')),
                ('is_deleted', models.BooleanField(default=False, help_text='Indicates whether the record is soft-deleted', verbose_name='Is Deleted')),
                ('locale', models.CharField(choices=[('en', 'English'), ('hi', 'Hindi'), ('ur', 'Urdu')], default='en-us', help_text='Locale used for this entry (e.g. en, hi, te)', max_length=10, verbose_name='Locale')),
                ('tag_number', models.CharField(help_text='Animal tag number (can be temporary)', max_length=100)),
                ('age_years', models.PositiveIntegerField(blank=True, help_text='Age in years', null=True)),
                ('age_months', models.PositiveIntegerField(blank=True, help_text='Additional months', null=True)),
                ('weight_kg', models.DecimalField(blank=True, decimal_places=2, help_text='Weight in kilograms', max_digits=6, null=True)),
                ('is_pregnant', models.BooleanField(default=False, help_text='Is the animal pregnant')),
                ('pregnancy_months', models.PositiveIntegerField(blank=True, help_text='Pregnancy duration in months', null=True)),
                ('additional_details', models.TextField(blank=True, help_text='Additional animal details')),
                ('is_active', models.BooleanField(default=True, help_text='Is the cattle record active')),
                ('sync', models.BooleanField(default=False, help_text='Sync status with server')),
            ],
            options={
                'verbose_name': 'Non Member Cattle',
                'verbose_name_plural': 'Non Member Cattle',
                'db_table': 'tbl_non_member_cattle',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TreatmentCostConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated', verbose_name='Updated At')),
                ('is_deleted', models.BooleanField(default=False, help_text='Indicates whether the record is soft-deleted', verbose_name='Is Deleted')),
                ('sync', models.BooleanField(default=False, help_text='Indicates if the record is synced with the server', verbose_name='Synced')),
                ('locale', models.CharField(choices=[('en', 'English'), ('hi', 'Hindi'), ('ur', 'Urdu')], default='en-us', help_text='Locale used for this entry (e.g. en, hi, te)', max_length=10, verbose_name='Locale')),
                ('membership_type', models.CharField(choices=[('member', 'Member'), ('non_member', 'Non-Member')], help_text='Member type', max_length=20)),
                ('time_slot', models.CharField(choices=[('before_10am', 'Before 10:00 AM (6:00 to 10:00)'), ('after_10am', 'After 10:00 AM')], help_text='Time slot for the visit', max_length=20)),
                ('animal_tag_type', models.CharField(choices=[('tagged', 'Tagged Animal'), ('non_tagged', 'Non-Tagged Animal')], help_text='Whether animal is tagged or not', max_length=20)),
                ('treatment_type', models.CharField(choices=[('normal', 'Normal Treatment'), ('emergency', 'Emergency Treatment'), ('operation', 'Operation Cost')], help_text='Type of treatment', max_length=20)),
                ('cost_amount', models.DecimalField(decimal_places=2, help_text='Treatment cost amount', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_active', models.BooleanField(default=True, help_text='Whether this cost configuration is active')),
                ('effective_from', models.DateField(help_text='Date from which this cost is effective')),
                ('effective_to', models.DateField(blank=True, help_text='Date until which this cost is effective (null for indefinite)', null=True)),
                ('description', models.CharField(blank=True, help_text='Description or notes about this cost configuration', max_length=255)),
            ],
            options={
                'verbose_name': 'Treatment Cost Configuration',
                'verbose_name_plural': 'Treatment Cost Configurations',
                'db_table': 'tbl_treatment_cost_config',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='caseentry',
            name='calculated_cost',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Calculated treatment cost', max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='caseentry',
            name='disease_name',
            field=models.CharField(blank=True, help_text='Disease name in Hindi or English', max_length=255),
        ),
        migrations.AddField(
            model_name='caseentry',
            name='is_emergency',
            field=models.BooleanField(default=False, help_text='Whether this is an emergency treatment'),
        ),
        migrations.AddField(
            model_name='caseentry',
            name='is_tagged_animal',
            field=models.BooleanField(default=True, help_text='Whether the animal is tagged or non-tagged for cost calculation'),
        ),
        migrations.AddField(
            model_name='caseentry',
            name='visit_date',
            field=models.DateTimeField(blank=True, help_text='Scheduled visit date and time', null=True),
        ),
        migrations.AlterField(
            model_name='caseentry',
            name='cattle',
            field=models.ForeignKey(blank=True, help_text='The member cattle associated with this case entry.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cattle_cases', to='veterinary.cattle', verbose_name='Member Cattle'),
        ),
        migrations.AddIndex(
            model_name='caseentry',
            index=models.Index(fields=['status'], name='idx_caseentry_status'),
        ),
        migrations.AddField(
            model_name='treatmentcostconfiguration',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this configuration', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cost_configurations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='treatmentcostconfiguration',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated By'),
        ),
        migrations.AddField(
            model_name='nonmembercattle',
            name='breed',
            field=models.ForeignKey(blank=True, help_text='Breed of the cattle.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='animals_breed', to='veterinary.speciesbreed', verbose_name='Breed'),
        ),
        migrations.AddField(
            model_name='nonmembercattle',
            name='non_member',
            field=models.ForeignKey(help_text='Non-member owner', on_delete=django.db.models.deletion.CASCADE, related_name='cattle', to='veterinary.nonmember'),
        ),
        migrations.AddField(
            model_name='nonmembercattle',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated By'),
        ),
        migrations.AddField(
            model_name='nonmember',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who registered this non-member', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='non_members_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='nonmember',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated By'),
        ),
        migrations.AddField(
            model_name='costconfigurationhistory',
            name='changed_by',
            field=models.ForeignKey(blank=True, help_text='User who made the change', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='costconfigurationhistory',
            name='cost_configuration',
            field=models.ForeignKey(help_text='Related cost configuration', on_delete=django.db.models.deletion.CASCADE, related_name='history', to='veterinary.treatmentcostconfiguration'),
        ),
        migrations.AddField(
            model_name='costconfigurationhistory',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated By'),
        ),
        migrations.AddField(
            model_name='caseentry',
            name='non_member_cattle',
            field=models.ForeignKey(blank=True, help_text='The non-member cattle associated with this case entry.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='non_member_cattle_cases', to='veterinary.nonmembercattle', verbose_name='Non-Member Cattle'),
        ),
        migrations.AddIndex(
            model_name='treatmentcostconfiguration',
            index=models.Index(fields=['membership_type'], name='idx_cost_membership'),
        ),
        migrations.AddIndex(
            model_name='treatmentcostconfiguration',
            index=models.Index(fields=['time_slot'], name='idx_cost_timeslot'),
        ),
        migrations.AddIndex(
            model_name='treatmentcostconfiguration',
            index=models.Index(fields=['treatment_type'], name='idx_cost_treatment'),
        ),
        migrations.AddIndex(
            model_name='treatmentcostconfiguration',
            index=models.Index(fields=['is_active'], name='idx_cost_active'),
        ),
        migrations.AddIndex(
            model_name='treatmentcostconfiguration',
            index=models.Index(fields=['effective_from', 'effective_to'], name='idx_cost_effective_dates'),
        ),
        migrations.AlterUniqueTogether(
            name='treatmentcostconfiguration',
            unique_together={('membership_type', 'time_slot', 'animal_tag_type', 'treatment_type', 'effective_from')},
        ),
        migrations.AddIndex(
            model_name='nonmembercattle',
            index=models.Index(fields=['tag_number'], name='idx_nonmembercattle_tag'),
        ),
        migrations.AddIndex(
            model_name='nonmembercattle',
            index=models.Index(fields=['non_member'], name='idx_nonmembercattle_owner'),
        ),
        migrations.AddIndex(
            model_name='nonmember',
            index=models.Index(fields=['mobile_no'], name='idx_nonmember_mobile'),
        ),
        migrations.AddIndex(
            model_name='nonmember',
            index=models.Index(fields=['non_member_id'], name='idx_nonmember_id'),
        ),
    ]
